{"version":3,"sources":["components/actionBar/ActionBar.js","components/todo/CreateTodo.js","redux/actions/actionTypes.js","redux/actions/todoActions.js","components/todo/TodoList.js","components/root/App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/todoReducer.js","index.js","redux/reducers/configureStore.js"],"names":["ActionBar","className","to","type","Component","CreateTodo","onClickHandler","e","preventDefault","todo","id","generateId","headline","state","content","console","log","saveToStorage","onChangeHandler","target","name","value","setState","Math","random","toString","substr","todos","JSON","parse","sessionStorage","getItem","push","setItem","stringify","onChange","this","rows","onClick","GET_TODOS","getToDos","dispatch","actionTypes","payload","TodoList","newTodos","filter","x","parentElement","remove","props","actions","getTodos","map","connect","todoReducer","bindActionCreators","todoActions","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acbe6685.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./actionBar.css\"\r\nexport default class ActionBar extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                <Link to=\"/to-do-list\"><button type=\"button\" className=\"btn btn-warning left\">todos</button></Link>\r\n                <Link to=\"/newtodo\"><button type=\"button\" className=\"btn btn-warning right\">new</button></Link>\r\n            </div>\r\n            </nav>\r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./createToDo.css\"\r\nexport default class CreateTodo extends Component {\r\n\r\n   onClickHandler=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const id=this.generateId();\r\n        let todo={id:id,headline:this.state.headline,content:this.state.content};\r\n\r\n      console.log(todo);\r\n\r\n        this.saveToStorage(todo);\r\n\r\n       \r\n   } \r\n\r\n   onChangeHandler=(e)=>{\r\n    \r\n    const {name,value}=e.target;\r\n    \r\n    this.setState({\r\n      [name]:value\r\n    })\r\n   }\r\n\r\n   generateId=()=>{\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n   }\r\n\r\n   saveToStorage=(todo)=>{\r\n\r\n    \r\n     let todos=JSON.parse(sessionStorage.getItem(\"todos\"));\r\n\r\n     if (todos===null) {\r\n       todos=[];\r\n     }\r\n\r\n     todos.push(todo);\r\n\r\n    sessionStorage.setItem(\"todos\",JSON.stringify(todos));\r\n   }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label>headline</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"headline\" name=\"headline\"onChange={this.onChangeHandler}></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>content</label>\r\n            <textarea type=\"text\" className=\"form-control \" rows=\"10\" id=\"content\" name=\"content\" onChange={this.onChangeHandler}></textarea>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-success right\" onClick={this.onClickHandler}>save</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","export const GET_TODOS=\"GET_TODOS\"","import * as actionTypes from \"./actionTypes\"\r\n\r\nexport function getToDoSuccess(todos){\r\n\r\n    return{\r\n        type:actionTypes.GET_TODOS,\r\n        payload:todos\r\n    }\r\n}\r\n\r\nexport function getToDos(){\r\n    return function(dispatch){\r\n        \r\n        return  dispatch(getToDoSuccess(JSON.parse(sessionStorage.getItem(\"todos\"))))\r\n    } \r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as todoActions from \"../../redux/actions/todoActions\"\r\n\r\nclass TodoList extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.actions.getTodos();\r\n      }\r\n\r\n    onClickHandler=(e)=>{\r\n        let {id}=e.target;\r\n        let todos=JSON.parse(sessionStorage.getItem(\"todos\"));\r\n        let newTodos=todos.filter(x=>x.id!==id);\r\n        sessionStorage.setItem(\"todos\",JSON.stringify(newTodos))\r\n        \r\n        e.target.parentElement.parentElement.remove();\r\n        \r\n    }\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Headline</td>\r\n                            <td>Content</td>\r\n                            <td>#</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.todos.map(todo=>(\r\n                            <tr key={todo.id}>\r\n                            <td>{todo.headline}</td>\r\n                            <td>{todo.content}</td>\r\n                            <td><button id={todo.id} type=\"button\" className=\"btn btn-danger\" onClick={this.onClickHandler}>delete</button></td>\r\n                        </tr>\r\n                        ))}\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return{\r\n        todos:state.todoReducer\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return{\r\n        actions:{\r\n            getTodos:bindActionCreators(\r\n                todoActions.getToDos,\r\n                dispatch\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TodoList)\r\n","import { Switch, Route } from \"react-router-dom\";\nimport ActionBar from \"../actionBar/ActionBar\";\nimport CreateTodo from \"../todo/CreateTodo\";\nimport TodoList from \"../todo/TodoList\";\nimport \"./app.css\"\nfunction App() {\n  return (\n    <div>\n      \n        <ActionBar></ActionBar>\n     \n      <div className=\"get-center\">\n        <Switch>\n          <Route path=\"/to-do-list\" exact component={TodoList}></Route>\n          <Route path=\"/newtodo\" exact component={CreateTodo}></Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState={\r\n    todos:[]\r\n}\r\n\r\nexport default initialState;","import {combineReducers} from \"redux\"\r\nimport todoReducer from \"./todoReducer\"\r\n\r\nconst rootReducer=combineReducers({\r\n    todoReducer\r\n\r\n})\r\n\r\nexport default rootReducer;","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function todoReducer(state=initialState.todos,action){\r\n\r\n \r\n\r\n    switch (action.type) {\r\n        case actionTypes.GET_TODOS:\r\n            \r\n            return action.payload===null?state:action.payload\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/root/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/reducers/configureStore\";\nimport \"bootstrap/dist/css/bootstrap.css\"\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {applyMiddleware,createStore} from \"redux\"\r\nimport rootReducer from \"./index\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nexport default function configureStore(){\r\n    return createStore(rootReducer,applyMiddleware(thunk))\r\n}\r\n"],"sourceRoot":""}